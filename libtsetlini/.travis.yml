language: cpp
dist: xenial

branches:
  only:
    - main

env:
  global:
    # Ubuntu version
    - DEPS_DIR=${TRAVIS_BUILD_DIR}/deps

matrix:
  include:
    # Linux/gcc
    # https://launchpad.net/~ubuntu-toolchain-r/+archive/ubuntu/test/+packages
    #- os: linux
    #  env: COMPILER=g++-5
    #- os: linux
    #  env: COMPILER=g++-6
    - os: linux
      env: COMPILER=g++-7
    - os: linux
      env: COMPILER=g++-8
    #- os: linux
    #  env: COMPILER=g++-9

    # Linux/clang
    # https://apt.llvm.org/
    #- os: linux
    #  env: COMPILER=clang++-3.5
    #- os: linux
    #  env: COMPILER=clang++-3.6
    #- os: linux
    #  env: COMPILER=clang++-3.7 DISABLE_ASAN=yes
    #- os: linux
    #  env: COMPILER=clang++-3.8
    #- os: linux
    #  env: COMPILER=clang++-3.9
    #- os: linux
    #  env: COMPILER=clang++-4.0
    #- os: linux
    #  env: COMPILER=clang++-5.0
    #- os: linux
    #  env: COMPILER=clang++-6.0
    #- os: linux
    #  env: COMPILER=clang++-7

    # macOS/clang
    # https://docs.travis-ci.com/user/reference/osx/#OS-X-Version
    #- os: osx
    #  osx_image: xcode7.3
    #  env: OSX_VERSION=10.11
    #- os: osx
    #  osx_image: xcode8.3
    #  env: OSX_VERSION=10.12
    #- os: osx
    #  osx_image: xcode9.3
    #  env: OSX_VERSION=10.13

  fast_finish: true




install:
  - |
    case ${COMPILER} in
      g++-[6789])
        travis_retry sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        travis_retry sudo apt-get -qq update
        travis_retry sudo apt-get -qy install "${COMPILER}"
        ;;
      clang++-*)
        CLANG_VERSION=${COMPILER/clang++}
        if [[ ${CLANG_VERSION} != "-3."* ]]; then
          wget -O - "https://apt.llvm.org/llvm-snapshot.gpg.key" | sudo apt-key add -
          travis_retry sudo add-apt-repository -y "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial${CLANG_VERSION/-7} main"
        fi
        travis_retry sudo apt-get -qq update
        travis_retry sudo apt-get -qy install "clang${CLANG_VERSION}"
        ;;
    esac
  ############################################################################
  # Install a recent CMake (unless already installed on OS X)
  ############################################################################
  - CMAKE_VERSION=3.10.2
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v${CMAKE_VERSION%.[0-9]}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz"
      mkdir -p ${DEPS_DIR}/cmake
      travis_retry wget --no-check-certificate -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C ${DEPS_DIR}/cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    else
      brew install cmake || brew upgrade cmake
    fi
    cmake --version
  #- sudo apt-get install python3-pip
  #- pip3 install --user setuptools #==40.8.0
  #- pip3 install --user numpy #==1.16.1 # current version: cython errors + , segfault + 
  #- pip3 install Cython
  #- pip3 install --user scikit_learn==0.20.2
  #- pip3 install --user pytest
  #- pip3 install --user py
  #- pip3 install --user pluggy
  #- |
  #  pushd bindings/python
  #  python3 setup.py build_clib
  #  popd

before_script:
  - if [[ ${TRAVIS_OS_NAME} == linux ]]; then export NODE_LABELS="Linux Ubuntu Ubuntu-16.04"; fi
  - if [[ ${TRAVIS_OS_NAME} == osx ]]; then export NODE_LABELS="OSX OSX-${OSX_VERSION}"; fi
  - if [[ -n ${COMPILER} ]]; then export CXX=${COMPILER}; fi
  - ${CXX:-c++} --version
  - ${CXX:-c++} -march=native -E -v - </dev/null 2>&1 | grep cc1
  #- python3 --version
  #- cython --version

script:
  - ${CXX:-c++} -march=native -O3 -Q --help=target | grep march
  - pushd .build
  - cmake -DCMAKE_CXX_COMPILER=${CXX:-c++} -DCMAKE_BUILD_TYPE=Release -DBENCHMARK_ENABLE_GTEST_TESTS=OFF -DCMAKE_CXX_FLAGS="-Wall -Werror -march=native -mno-avx512f" ..
  - cmake --build .
  - pushd lib && ctest && popd
  - sudo make install
  - sudo ldconfig
  - popd
  #- pushd bindings/python
  #- export CC=${CXX:-c++}
  #- python3 setup.py build
  #- python3 setup.py pytest
  #- python3 setup.py install --user
  #- popd
